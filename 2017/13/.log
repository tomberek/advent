Seq	Host	Starttime	JobRuntime	Send	Receive	Exitval	Signal	Command
1	:	1544762972.942	     0.172	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=0:\ 3 100000
2	 root@96.127.124.203	1544762972.951	     1.316	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=0:\ 3 100000000
3	 root@160.1.32.233	1544762972.959	     1.361	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=1:\ 2 100000
4	 root@52.61.75.101	1544762972.964	     1.466	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=1:\ 2 100000000
5	 root@52.61.249.3	1544762972.970	     1.447	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=2:\ 9 100000
6	:	1544762972.973	     0.146	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=2:\ 9 100000000
7	 root@96.127.124.203	1544762972.980	     1.229	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=4:\ 4 100000
8	 root@160.1.32.233	1544762972.986	     1.336	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=4:\ 4 100000000
9	 root@52.61.75.101	1544762972.992	     1.212	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=6:\ 4 100000
10	 root@52.61.249.3	1544762972.997	     1.246	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=6:\ 4 100000000
11	:	1544762973.001	     0.123	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=8:\ 6 100000
12	 root@96.127.124.203	1544762973.007	     1.390	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=8:\ 6 100000000
13	 root@160.1.32.233	1544762973.012	     1.286	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=10:\ 6 100000
14	 root@52.61.75.101	1544762973.018	     1.376	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=10:\ 6 100000000
15	 root@52.61.249.3	1544762973.025	     1.232	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=12:\ 8 100000
16	:	1544762973.029	     0.099	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=12:\ 8 100000000
17	 root@96.127.124.203	1544762973.034	     1.244	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=14:\ 5 100000
18	 root@160.1.32.233	1544762973.040	     1.473	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=14:\ 5 100000000
19	 root@52.61.75.101	1544762973.047	     1.363	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=16:\ 6 100000
20	 root@52.61.249.3	1544762973.053	     1.311	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=16:\ 6 100000000
21	:	1544762973.058	     0.076	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=18:\ 8 100000
22	 root@96.127.124.203	1544762973.063	     1.315	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=18:\ 8 100000000
23	 root@160.1.32.233	1544762973.070	     1.367	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=20:\ 8 100000
24	 root@52.61.75.101	1544762973.077	     1.291	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=20:\ 8 100000000
25	 root@52.61.249.3	1544762973.083	     1.328	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=22:\ 8 100000
26	:	1544762973.088	     0.052	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=22:\ 8 100000000
27	 root@96.127.124.203	1544762973.094	     1.237	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=24:\ 6 100000
28	 root@160.1.32.233	1544762973.101	     1.294	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=24:\ 6 100000000
29	 root@52.61.75.101	1544762973.108	     1.411	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=26:\ 12 100000
30	 root@52.61.249.3	1544762973.113	     1.284	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=26:\ 12 100000000
31	:	1544762973.119	     0.028	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=28:\ 12 100000
32	:	1544762973.124	     0.030	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=28:\ 12 100000000
33	:	1544762973.128	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=30:\ 8 100000
34	:	1544762973.135	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=30:\ 8 100000000
35	:	1544762973.140	     0.031	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=32:\ 10 100000
36	:	1544762973.147	     0.031	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=32:\ 10 100000000
37	:	1544762973.155	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=34:\ 12 100000
38	:	1544762973.160	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=34:\ 12 100000000
39	:	1544762973.165	     0.031	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=36:\ 12 100000
40	:	1544762973.171	     0.036	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=36:\ 12 100000000
41	:	1544762973.179	     0.034	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=38:\ 10 100000
42	:	1544762973.184	     0.033	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=38:\ 10 100000000
43	:	1544762973.190	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=40:\ 12 100000
44	:	1544762973.196	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=40:\ 12 100000000
45	:	1544762973.207	     0.027	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=42:\ 12 100000
46	:	1544762973.212	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=42:\ 12 100000000
47	:	1544762973.217	     0.030	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=44:\ 12 100000
48	:	1544762973.223	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=44:\ 12 100000000
49	:	1544762973.229	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=46:\ 12 100000
50	:	1544762973.235	     0.030	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=46:\ 12 100000000
51	:	1544762973.241	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=48:\ 14 100000
52	:	1544762973.247	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=48:\ 14 100000000
53	:	1544762973.253	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=50:\ 14 100000
54	:	1544762973.258	     0.030	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=50:\ 14 100000000
55	:	1544762973.265	     0.028	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=52:\ 8 100000
56	:	1544762973.270	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=52:\ 8 100000000
57	:	1544762973.276	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=54:\ 12 100000
58	:	1544762973.281	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=54:\ 12 100000000
59	:	1544762973.288	     0.030	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=56:\ 14 100000
60	:	1544762973.294	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=56:\ 14 100000000
61	:	1544762973.299	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=58:\ 14 100000
62	:	1544762973.305	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=58:\ 14 100000000
63	:	1544762973.313	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=60:\ 14 100000
64	:	1544762973.319	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=60:\ 14 100000000
65	:	1544762973.326	     0.031	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=64:\ 14 100000
66	:	1544762973.332	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=64:\ 14 100000000
67	:	1544762973.338	     0.033	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=66:\ 14 100000
68	:	1544762973.345	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=66:\ 14 100000000
69	:	1544762973.351	     0.031	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=68:\ 14 100000
70	:	1544762973.357	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=68:\ 14 100000000
71	:	1544762973.365	     0.035	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=70:\ 14 100000
72	:	1544762973.371	     0.036	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=70:\ 14 100000000
73	:	1544762973.377	     0.038	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=72:\ 14 100000
74	:	1544762973.383	     0.038	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=72:\ 14 100000000
75	:	1544762973.389	     0.042	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=74:\ 12 100000
76	:	1544762973.400	     0.038	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=74:\ 12 100000000
77	:	1544762973.407	     0.037	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=76:\ 18 100000
78	:	1544762973.415	     0.038	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=76:\ 18 100000000
79	:	1544762973.421	     0.040	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=78:\ 14 100000
80	:	1544762973.432	     0.036	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=78:\ 14 100000000
81	:	1544762973.438	     0.036	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=80:\ 14 100000
82	:	1544762973.445	     0.035	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=80:\ 14 100000000
83	:	1544762973.453	     0.037	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=86:\ 18 100000
84	:	1544762973.462	     0.037	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=86:\ 18 100000000
85	:	1544762973.468	     0.038	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=88:\ 18 100000
86	:	1544762973.474	     0.032	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=88:\ 18 100000000
87	:	1544762973.480	     0.029	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=94:\ 20 100000
88	:	1544762973.491	     0.026	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=94:\ 20 100000000
89	:	1544762973.499	     0.021	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=98:\ 18 100000
90	:	1544762973.506	     0.017	0	0	1	0	gawk -e function\ abs\(x\)\{\;\	if\(x\<0\)\{\;\	\	return\ -1\ \*\ x\;\	\}\;\	else\{\;\	\	return\ x\;\	\}\;\}\;BEGIN\ \{\;\	FPAT\=\"\(\[0-9\]+\)\"\;\	max_scanner\ \=\ 0\;\}\;NR\ \=\=\ FNR\{\;\	for\(ind\=1\;ind\<\=NF\;ind++\)\{\;\	\	sizes\[\$1\]\=\$2\;\	\	scanner\[\$1\]\=0\;\	\	if\ \(\ \$1\ \>\ max_scanner\)\ max_scanner\ \=\ \$1\;\	\}\;\}\;END\ \{\;\ \ \ \ steps\ \=\ input_steps\ -1\;\	score\ \=\ 1\;\	while\(score\ \!\=\ 0\ \&\&\ steps\ \<\ input_steps\ +\ 100000\ \)\{\;\	\	steps++\;\	\	score\ \=\ trial\(steps\)\;\	\	if\(steps\ %\ 1000\ \=\=\ 0\)\ print\(\":\ \",\ steps\)\;\	\	if\ \(score\ \=\=\ 0\)\{\;\	\	\	print\(\"delay:\",\ steps\)\;\	\	\	exit\;\	\	\}\;\	\}\;\}\;function\ trial\(steps,\ sum\)\{\;\	sum\ \=\ 0\;\	start\ \=\ 0\;\	advance\(steps,sizes,scanner\)\;\	while\(start\ \<\=\ max_scanner\)\{\;\	\	if\(start\ in\ scanner\ \&\&\ scanner\[start\]\ \=\=\ 0\)\{\;\	\	\	sum\ +\=\ start\ \*\ sizes\[start\]\;\	\	\	return\ sum+1\;\	\	\}\;\	\	steps++\;\	\	start++\;\	\	advance\(steps,sizes,scanner\)\;\	\}\;\	print\(\"score:\",\ sum\)\;\	return\ sum\;\}\;function\ advance\(steps,\ sizes,\ scanner,\ i\)\{\;\	for\(i\ in\ scanner\)\{\;\	\	steps_new\ \=\ \(steps\ \)\ %\ \(sizes\[i\]\ \*\ 2\ -\ 2\)\;\	\	scanner\[i\]\ \=\ sizes\[i\]\ -\ 1\ -\ abs\(\ steps_new\ -\ sizes\[i\]\ +\ 1\ \)\;\	\}\;\}\; -v input_steps\=98:\ 18 100000000
